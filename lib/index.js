// Generated by CoffeeScript 1.9.3
var AngularTemplatesCompiler, escape, pug;

escape = require('js-string-escape');

pug = require('pug');

module.exports = AngularTemplatesCompiler = (function() {
  AngularTemplatesCompiler.prototype.brunchPlugin = true;

  AngularTemplatesCompiler.prototype.type = 'template';

  AngularTemplatesCompiler.prototype.extension = 'pug';

  AngularTemplatesCompiler.prototype.pattern = /\.(jade|pug)/;

  AngularTemplatesCompiler.prototype._default_path_transform = function(path) {
    return path;
  };

  function AngularTemplatesCompiler(config) {
    var ngCache, ref, ref1, ref10, ref11, ref12, ref13, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9;
    this.module = ((ref = config.plugins) != null ? (ref1 = ref.pug_angular_templates) != null ? ref1.module : void 0 : void 0) || 'templates';
    this.path_transform = ((ref2 = config.plugins) != null ? (ref3 = ref2.pug_angular_templates) != null ? ref3.path_transform : void 0 : void 0) || this._default_path_transform;
    this.locals = ((ref4 = config.plugins) != null ? (ref5 = ref4.pug_angular_templates) != null ? ref5.locals : void 0 : void 0) || {};
    this.pretty = !!((ref6 = config.plugins) != null ? (ref7 = ref6.pug_angular_templates) != null ? ref7.pretty : void 0 : void 0);
    this.doctype = ((ref8 = config.plugins) != null ? (ref9 = ref8.pug_angular_templates) != null ? ref9.doctype : void 0 : void 0) || "5";
    this.exportCachedTemplate = (ngCache = (ref10 = config.plugins) != null ? (ref11 = ref10.pug_angular_templates) != null ? ref11.exportCachedTemplate : void 0 : void 0) != null ? !!ngCache : true;
    this.exportCommonJs = !!((ref12 = config.plugins) != null ? (ref13 = ref12.pug_angular_templates) != null ? ref13.exportCommonJs : void 0 : void 0);
  }

  AngularTemplatesCompiler.prototype.compile = function(data, path, callback) {
    var html, pugfunction, url;
    pugfunction = pug.compile(data, {
      debug: false,
      pretty: this.pretty,
      doctype: this.doctype,
      filename: path,
      compileDebug: false
    });
    html = escape(pugfunction(this.locals));
    url = this.path_transform(path.replace(/\\/g, "/"));
    return callback(null, "(function() {\n  var ngModule, template = '" + html + "';\n  " + (this.insertExports(url, html)) + "\n})();");
  };

  AngularTemplatesCompiler.prototype.insertExports = function(url, html) {
    var compiledExports;
    compiledExports = [];
    if (this.exportCachedTemplate) {
      compiledExports.push("try {\n  // Get current templates module\n  ngModule = angular.module('" + this.module + "');\n} catch (error) {\n  // Or create a new one\n  ngModule = angular.module('" + this.module + "', []);\n}\nngModule.run([\"$templateCache\", function($templateCache) {\n  $templateCache.put('" + url + "', template);\n}]);");
    }
    if (this.exportCommonJs) {
      compiledExports.push("if (module) {\n  module.exports = template;\n}");
    }
    return compiledExports.join("\n");
  };

  return AngularTemplatesCompiler;

})();
